plugins {
    id 'java'
}

group = 'main'
version = '1.0-SNAPSHOT'

ext {
    newAppName = 'Orbis Bot'
    appProperties = 'app.properties'
}

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.12'

    // https://mvnrepository.com/artifact/org.telegram/telegrambots
    implementation 'org.telegram:telegrambots:6.9.0'
    implementation 'com.github.pengrad:java-telegram-bot-api:6.9.1'

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.44.1.0'

    // https://mvnrepository.com/artifact/com.vdurmont/emoji-java
    implementation 'com.vdurmont:emoji-java:5.1.1'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    // Testing impl
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

jar {
    manifest {
        attributes "Main-Class": "main.AppLauncher"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

test {
    useJUnitPlatform()
}

tasks.register("createRelease") {
    doLast {
        mkdir('./build/release')
        println "Release folder: ./build/release/"
        println "Config file: ./build/release/${appProperties}"
        println "Jar file: ./build/release/${newAppName}.jar"
        println "To run ${newAppName} as a jar, go to ./build/release/"
        println "Run: java -jar ${newAppName}.jar"
    }
}

tasks.register('releaseJar', Copy) {
    dependsOn(createRelease)

    // copy fatJar to release folder
    from "./build/libs/${rootProject.name}-${version}.jar"
    into "./build/release"
    rename "${rootProject.name}-${version}.jar", "${newAppName}.jar"

    // copy config to release folder
    from "./${appProperties}"
    into "./build/release"
}

jar.finalizedBy releaseJar